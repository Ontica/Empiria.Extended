<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema
    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AjaxInvocationError" xml:space="preserve">
    <value>Ocurrió un problema al ejecutar el comando {0} utilizando los servicios Ajax del sistema Empiria.</value>
  </data>
  <data name="CantRetriveContent" xml:space="preserve">
    <value>No pude recuperar el contenido del elemento '{0}'\nEs muy posible que no esté definido en el archivo de cadenas XHTML.</value>
  </data>
  <data name="CommandParameterError" xml:space="preserve">
    <value>Ocurrió un problema al leer el parámetro {1} con valor {2} al ejecutar el comando {0}.</value>
  </data>
  <data name="CommandProcessingError" xml:space="preserve">
    <value>Ocurrió un problema al intentar ejecutar el comando '{0}' en el servidor de páginas web.</value>
  </data>
  <data name="InvalidMaxLogAttempts" xml:space="preserve">
    <value>Por razones de seguridad, el valor del parámetro de configuración que indica el número de intentos posibles para la autentificación (Session.MaxLogAttempts) debe estar entre 1 y 10 intentos.</value>
  </data>
  <data name="InvalidSessionTimeout" xml:space="preserve">
    <value>Por razones de seguridad, el valor del parámetro de configuración que indica el tiempo en que caducan las sesiones de trabajo debe estar entre 5 y 120 minutos.</value>
  </data>
  <data name="NullCommandName" xml:space="preserve">
    <value>No se proporcionó el nombre del comando enviado al servidor de páginas web para su procesamiento.</value>
  </data>
  <data name="NullCommandParameter" xml:space="preserve">
    <value>El comando '{0}' requiere el parámetro '{1}' para poder ser procesado por el servidor de páginas web. Sin embargo, dicho parámetro no fue proporcionado.</value>
  </data>
  <data name="SessionTimeout" xml:space="preserve">
    <value>La sesión de trabajo ha caducado.\nPor favor, intente ingresar nuevamente a la aplicación desde la página de inicio.</value>
  </data>
  <data name="UnrecognizedCommandName" xml:space="preserve">
    <value>No se ha definido el programa que procesa la instrucción con nombre '{0}' para la página web solicitada. Este es un problema de programación que debe ser resuelto por el área de sistemas.</value>
  </data>
  <data name="WebApplicationInitializationFails" xml:space="preserve">
    <value>Ocurrió un problema al intentar iniciar la aplicación web.</value>
  </data>
</root>